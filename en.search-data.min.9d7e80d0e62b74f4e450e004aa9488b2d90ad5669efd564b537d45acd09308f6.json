[{"id":0,"href":"/study-linux/docs/appendix/interview/basic/","title":"基础","section":"4.2 面试题","content":" 基础面试题 # "},{"id":1,"href":"/study-linux/docs/appendix/interview/advanced/","title":"进阶","section":"4.2 面试题","content":" 进阶面试题 # "},{"id":2,"href":"/study-linux/docs/appendix/interview/expert/","title":"高阶","section":"4.2 面试题","content":" 高阶面试题 # "},{"id":3,"href":"/study-linux/docs/design/code/0.11/","title":"0.11","section":"3.7 源码分析","content":" Linux 0.11 源码分析 # https://github.com/ikingye/linux-history/tree/0.11-annotated\n参考：\nsunym1993/flash-linux0.11-talk "},{"id":4,"href":"/study-linux/docs/basic/linux/","title":"1.1 Linux","section":"第一部分 基础入门","content":" Linux # "},{"id":5,"href":"/study-linux/docs/basic/distro/CentOS/","title":"1.2.1 CentOS","section":"1.2 发行版","content":" CentOS # yum # Yum（Yellow dog Updater, Modified）是由 Duke University 团队修改 Yellow Dog Linux 的 Yellow Dog Updater 开发而成，是一个基于 RPM 包管理的字符前端软件包管理器。能够从指定的服务器自动下载 RPM 包并且安装，可以处理依赖性关系，并且一次安装所有依赖的软件包，无须繁琐地一次次下载、安装。被 Yellow Dog Linux 本身，以及 Fedora、Red Hat Enterprise Linux 采用。\n安装本地 rpm 包 # rpm -qs | grep jdk yum install -y /xxx/xxx.rpm # localinstall 已过时 # yum localinstall -y /xxx/xxx.rpm 第三方源 # EPEL # Extra Packages for Enterprise Linux\nEPEL is a Fedora Special Interest Group that creates, maintains, and manages a high quality set of additional packages for Enterprise Linux, including, but not limited to, Red Hat Enterprise Linux (RHEL), CentOS and Scientific Linux (SL), Oracle Linux (OL).\nyum install -y epel-release "},{"id":6,"href":"/study-linux/docs/appendix/tutorial/","title":"4.1 教程","section":"第四部分 附录","content":" 教程 # 基础 # 进阶 # Linux 操作系统实现原理 # [pdf] Linux 内核 0.12 完全注释（修正版 V5.0） - 赵炯 MaximeChretien/linux-history "},{"id":7,"href":"/study-linux/docs/basic/linux/user/","title":"用户","section":"1.1 Linux","content":" Linux 用户 # 创建用户 # useradd # useradd 是一个低级的、更基础的命令，几乎在所有的 Linux 发行版中都可以找到。 它提供了较少的默认设置，这意味着在创建用户时，你可能需要手动设置更多的选项，如用户的家目录、登录 shell、用户组等。 使用 useradd 时，通常需要配合其他命令，如 passwd 来设置用户密码。\n# 不会创建同名目录 # useradd xxx # 会在 /home 目录创建同名文件夹 useradd -m yewang passwd yewang adduser # 设置 sudo 免密 # 对于 RHEL/CentOS/SLES12/Debian/Ubuntu 系统 # cat \u0026lt;\u0026lt; EOF \u0026gt; /etc/sudoers.d/yewang yewang ALL=(ALL) NOPASSWD:ALL EOF 对于 SLES11 (SUSE Linux Enterprise Server) 系统 # cat \u0026lt;\u0026lt; EOF \u0026gt;\u0026gt; /etc/sudoers yewang ALL=(ALL) NOPASSWD:ALL EOF --- ## 删除用户 ### userdel xxx --- ## 用户组 ### 添加组 groupadd xxx ### 删除组 groupdel xxx --- ## 修改用户主目录 usermod -d /home/users/yewang -u uid yewang 问题：usermod user is currently used by process ### uid 获取 id 用户名 --- ## 修改默认用户目录与默认 shell ```shell chmod +w /etc/passwd vi /etc/passwd # id username # yewang:x:311272:100000:yewang:/home/user/yewang:/bin/zsh chmod -w /etc/passwd sudo 免密码 # 切换到 root 用户\n添加 sudo 文件的写权限\n# 添加 sudo 文件的写权限 chmod u+w /etc/sudoers vi /etc/sudoers 找到这行 root ALL=(ALL) ALL, 在他下面添加 xxx ALL=(ALL) ALL (这里的 xxx 是你的用户名)\nps: 这里说下你可以 sudoers 添加下面四行中任意一条\n# 允许用户 youuser 执行 sudo 命令 (需要输入密码). youuser ALL=(ALL) ALL # 允许用户组 youuser 里面的用户执行 sudo 命令 (需要输入密码). %youuser ALL=(ALL) ALL # 允许用户 youuser 执行 sudo 命令，并且在执行的时候不输入密码. youuser ALL=(ALL) NOPASSWD: ALL # 允许用户组 youuser 里面的用户执行 sudo 命令，并且在执行的时候不输入密码. %youuser ALL=(ALL) NOPASSWD: ALL 撤销 sudoers 文件写权限，命令: chmod u-w /etc/sudoers "},{"id":8,"href":"/study-linux/docs/basic/distro/","title":"1.2 发行版","section":"第一部分 基础入门","content":" Linux 发行版 # Debian # Ubuntu # Fedora # RHEL (Red Hat Enterprise Linux) # CentOS # openSUSE # Arch Linux # Chrome OS # "},{"id":9,"href":"/study-linux/docs/basic/distro/Ubuntu/","title":"1.2.2 Ubuntu","section":"1.2 发行版","content":" Ubuntu # 版本存续期间并不锁定内核版本 真正在一个版本生命周期内几乎不会变的东西其实是 libc 20.04 vs 18.04 # Ubuntu 20.04 与 Ubuntu 18.04 的比较表\n特征 Ubuntu 20.04（Ubuntu 20.04 发布下载，附新特性和增强新功能介绍） Ubuntu 18.04 发布日期 2020 年 4 月 23 日 2018 年 4 月 26 日 开发代号 Focal Fossa Bionic Beaver 默认显示服务器 Xorg 是 Ubuntu 20.04 中的默认显示服务器 Xorg 成为 Ubuntu 18.04 中的默认显示服务器 Linux 内核 Ubuntu 20.04 随附 5.4 内核，您可以获得本机 ExFAT 支持和其他性能改进 Ubuntu 18.04 随附 4.15 内核 32 位和 64 位 没有适用于 Ubuntu 20.04 的 32 位系统 Ubuntu 18.04 同时具有 32 位和 64 位 Gnome 桌面 GNOME 3.36 以及该版本的视觉和性能改进 GNOME 3.28 以及该版本的视觉和性能改进 视觉差异 Ubuntu 20.04 更漂亮，Ubuntu 20.04 通过三种样式增强了默认的 Yaru 主题：浅色、深色和标准 Ubuntu 18.04 LTS 用户注意到 Nautilus 上有一些暗淡的视觉变化 静音/禁用通知 现在可以使设置中的通知静音 没有设置静音通知 Dock 您现在可以使用扩展程序应用程序删除 Dock 用户无法自行决定删除 Dock 安装时间 与 Ubuntu 18.04 相比，由于采用了新的压缩算法，因此安装 Ubuntu 20.04 所需的时间更少 与 Ubuntu 20.04 相比安装速度较慢 开机时间 与 Ubuntu 18.04 相比，Ubuntu 20.04 的启动速度也更快 与 Ubuntu 20.04 相比，启动速度较慢 WireGuard 支持 WireGuard 已被反向移植到 Ubuntu 20.04 中的 Kernel 5.4 不支持 WireGuard Snap 应用 更多活动供用户使用 支持快照应用 Python 默认情况下为 Python3 仍然预装了 Python2 X11 分数 X11 分数缩放 没有 X11 分数缩放 PHP php 7.4 是可安装的默认版本 php 7.3 22.04 vs 20.04 # 特征 Ubuntu 22.04 Ubuntu 20.04 代号 Jammy Jellyfish Focal Fossa Gnome 桌面 GNOME 42 GNOME 3.36 GCC GCC 11.2 GCC 10.3 binutils binutils 2.38 glibc glibc 2.35 Python Python3 3.10.1 Python3 3.8.2 Linux Kernel Linux Kernel 5.15 LTS Linux Kernel 5.4 "},{"id":10,"href":"/study-linux/docs/appendix/interview/","title":"4.2 面试题","section":"第四部分 附录","content":" 面试题 # 基础题 # 进阶题 # "},{"id":11,"href":"/study-linux/docs/appendix/attention/","title":"4.3 关注项目","section":"第四部分 附录","content":" 关注项目 # "},{"id":12,"href":"/study-linux/docs/advanced/snippet/","title":"2.4 代码片段","section":"第二部分 进阶实战","content":" 代码片段 # "},{"id":13,"href":"/study-linux/docs/advanced/debug/","title":"2.5 故障排查","section":"第二部分 进阶实战","content":" 故障排查 # "},{"id":14,"href":"/study-linux/docs/advanced/prof/","title":"2.6 性能","section":"第二部分 进阶实战","content":" 性能 # "},{"id":15,"href":"/study-linux/docs/design/code/","title":"3.7 源码分析","section":"第三部分 设计与实现","content":" 源码分析 # 现在的 Linux 内核和 Linux 2.6 的内核有多大区别？ "},{"id":16,"href":"/study-linux/docs/basic/linux/timezone/","title":"时区","section":"1.1 Linux","content":" 时区 # 设置时区 # CentOS 和 Ubuntu 的时区文件是 /etc/localtime，\n但是在 CentOS7 以后 localtime 变成了一个链接文件\n[root@centos7 ~]# ll /etc/localtime lrwxrwxrwx 1 root root 33 Oct 12 11:01 /etc/localtime -\u0026gt; /usr/share/zoneinfo/Asia/Shanghai CentOS6、Ubuntu16 $ cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime CentOS7、RHEL7、Scientific Linux 7、Oracle Linux 7 最好的方法是使用 timedatectl 命令\n$ timedatectl list-timezones |grep Shanghai #查找中国时区的完整名称 Asia/Shanghai $ timedatectl set-timezone Asia/Shanghai #其他时区以此类推 或者直接手动创建软链接\n$ ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime 参考：\nLinux 修改时区的正确方法 "}]